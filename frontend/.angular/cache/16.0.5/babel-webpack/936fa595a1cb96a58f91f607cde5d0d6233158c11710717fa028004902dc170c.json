{"ast":null,"code":"import { __decorate } from \"tslib\";\n// new-post.component.ts\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet NewPostComponent = class NewPostComponent {\n  constructor(fb, postService, authService) {\n    this.fb = fb;\n    this.postService = postService;\n    this.authService = authService;\n    this.postForm = this.fb.group({\n      title: ['', Validators.required],\n      body: ['', Validators.required]\n    });\n  }\n  submitPost() {\n    if (!this.postForm.valid) {\n      return;\n    }\n    const newPost = {\n      // Get the current user's ID from the AuthService\n    };\n    this.postService.submitPost(newPost.title, newPost.body, newPost.author).subscribe(response => {\n      console.log('Post submitted successfully', response);\n      this.postForm.reset();\n    }, error => console.error('There was an error submitting the post', error));\n  }\n};\nNewPostComponent = __decorate([Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.scss']\n})], NewPostComponent);\nexport { NewPostComponent };","map":{"version":3,"names":["Component","Validators","NewPostComponent","constructor","fb","postService","authService","postForm","group","title","required","body","submitPost","valid","newPost","author","subscribe","response","console","log","reset","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Joakim\\Documents\\RoadAssociation_ruby_angular\\frontend\\src\\app\\new-post\\new-post.component.ts"],"sourcesContent":["// new-post.component.ts\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.scss']\n})\nexport class NewPostComponent {\n  postForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private postService: PostService, private authService: AuthService) {\n    this.postForm = this.fb.group({\n      title: ['', Validators.required],\n      body: ['', Validators.required],\n    });\n  }\n\n  submitPost() {\n    if (!this.postForm.valid) {\n      return;\n    }\n\n    const newPost = {\n       // Get the current user's ID from the AuthService\n    };\n\n    this.postService.submitPost(newPost.title, newPost.body, newPost.author)\n      .subscribe(\n        response => {\n          console.log('Post submitted successfully', response);\n          this.postForm.reset();\n        },\n        error => console.error('There was an error submitting the post', error)\n      );\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAG3BC,YAAoBC,EAAe,EAAUC,WAAwB,EAAUC,WAAwB;IAAnF,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IACxF,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KAC/B,CAAC;EACJ;EAEAE,UAAUA,CAAA;IACR,IAAI,CAAC,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;MACxB;;IAGF,MAAMC,OAAO,GAAG;MACb;IAAA,CACF;IAED,IAAI,CAACT,WAAW,CAACO,UAAU,CAACE,OAAO,CAACL,KAAK,EAAEK,OAAO,CAACH,IAAI,EAAEG,OAAO,CAACC,MAAM,CAAC,CACrEC,SAAS,CACRC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;MACpD,IAAI,CAACV,QAAQ,CAACa,KAAK,EAAE;IACvB,CAAC,EACDC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CACxE;EACL;CACD;AA5BYnB,gBAAgB,GAAAoB,UAAA,EAL5BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWvB,gBAAgB,CA4B5B;SA5BYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}